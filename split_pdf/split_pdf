#!/usr/bin/env python3

import sys
from pathlib import Path
from pypdf import PdfReader, PdfWriter

def split_pdf(input_pdf_path: str, split_page_numbers: list[int] = None) -> None:
    """
    Splits a PDF into multiple parts based on the provided list of page numbers.
    
    :param input_pdf_path: Path to the input PDF file.
    :param split_page_numbers: List of page numbers where the PDF should be split. If none, every 10 pages is split.
    """
    input_path = Path(input_pdf_path)
    # Check if the input file exists
    if not input_path.exists():
        raise FileNotFoundError(f"Input file '{input_path}' not found.")

    base_name = input_path.stem
    ext = input_path.suffix
    
    with input_path.open('rb') as input_pdf_file:
        reader = PdfReader(input_pdf_file)
        num_pages = len(reader.pages)
        
        start_page = 1
        part_number = 1
        
        if split_page_numbers is None:
            split_page_numbers = list(range(11, num_pages + 1, 10))

        split_page_numbers = split_page_numbers + [num_pages + 1]
        for end_page in split_page_numbers:            
            output_path = input_path.with_name(f"{base_name}_{part_number:03d}{ext}")
            
            writer = PdfWriter()
            for page_num in range(start_page - 1, end_page - 1):
                writer.add_page(reader.pages[page_num])
            
            with output_path.open('wb') as output_pdf_file:
                writer.write(output_pdf_file)
                print(f"Created '{output_path}' with pages {start_page} to {end_page - 1}")

            start_page = end_page
            part_number += 1


if __name__ == "__main__":
    import argparse

    # Set up command-line argument parser
    parser = argparse.ArgumentParser(description="Split a PDF into multiple files.")
    parser.add_argument("input_file", help="Path to the input PDF file")
    parser.add_argument('-s',
        "--split_points",
        help="Comma-separated list of page numbers where splits should occur",
        default=None
    )
    args = parser.parse_args()

    # Parse split points if provided
    if args.split_points:
        try:
            split_points = list(sorted(int(p) for p in args.split_points.split(",") if p != '1'))            
            if len(split_points) == 0:
                split_points = None
        except ValueError:
            print("Error: Split points must be integers separated by commas.")
            sys.exit(1)
    else:
        split_points = None

    # Call the split_pdf function
    try:
        split_pdf(args.input_file, split_points)
    except Exception as e:
        print(f"Error: {e}")
        sys.exit(1)
